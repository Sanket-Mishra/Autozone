name: Pro-workflow
on:
  push:
    branches:
      - main

jobs:
  onto-something:
    runs-on: ubuntu-latest
    steps:
      - name: check reachability
        run: |
          echo "I am here in called workflow"
  
  do-something:
    # Run this job only when:
    # - Workflow B is triggered directly by repository_dispatch
    # - The client_payload field `env` is set to "prod"
    # - Workflow B is NOT called by Workflow A (i.e., `triggered_by_workflow_a` is not set)
    runs-on: ubuntu-latest
    steps:
      - name: Print triggered_by_workflow_a input
        run: | 
         echo "triggered_by_workflow_a: ${{ inputs.triggered_by_master }}"
         echo "This GitHub Action was triggered by: ${{ github.event_name }}"
         echo "${{ secrets.REPO_SECRET }}"

      - name: Run job for direct repository_dispatch with env=prod
        run: echo "Job is running because it was triggered directly by repository_dispatch with env set to prod."

  print-secrets:
    # This job uses GitHub environments
    environment:
      name: ${{ github.event.client_payload.pro.vars.env }}  # Change this to the name of the environment you want to use
    runs-on: ubuntu-latest
    steps:
    - name: Check secret lengths
      run: |
        ENV_SECRET_1="${{ secrets.ENV_SECRET_1 }}"
        ENV_SECRET_2="${{ secrets.ENV_SECRET_2 }}"
        ENV_SECRET_3="${{ secrets.ENV_SECRET_3 }}"

        echo "Length of ENV_SECRET_1: ${#ENV_SECRET_1}"
        echo "Length of ENV_SECRET_2: ${#ENV_SECRET_2}"
        echo "Length of ENV_SECRET_3: ${#ENV_SECRET_3}"

    - name: Verify access to secrets
      run: |
        if [ -z "${{ secrets.ENV_SECRET_1 }}" ]; then
          echo "SECRET_KEY is not set."
        else
          echo "SECRET_KEY is available."
        fi

        if [ -z "${{ secrets.ENV_SECRET_3 }}" ]; then
          echo "RANDOM_KEY is not set."
        else
          echo "RANDOM_KEY is available."
        fi
          
        if [ -z "${{ secrets.ENV_SECRET_2 }}" ]; then
          echo "API_TOKEN is not set."
        else
          echo "API_TOKEN is available."
        fi     
        
